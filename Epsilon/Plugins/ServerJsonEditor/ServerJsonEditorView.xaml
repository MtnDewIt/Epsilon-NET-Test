<UserControl
    x:Class="ServerJsonEditor.ServerJsonEditorView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    Foreground="{DynamicResource Foreground}"
    DataContext="{Binding RelativeSource={RelativeSource Self}}">

    <Grid Width="auto" x:Name="mainGrid" Loaded="mainGrid_Loaded" HorizontalAlignment="Stretch">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="350" />
            <ColumnDefinition Width="1" />
            <ColumnDefinition Width="300" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
            <RowDefinition Height="44" />
            <RowDefinition Height="*" />
            <RowDefinition Height="30" />
            <RowDefinition Height="auto" />
        </Grid.RowDefinitions>
        
        <TextBlock Grid.Row="0" Grid.Column="0" Margin="15,15,15,10"
                   VerticalAlignment="Center" HorizontalAlignment="Left"
                   FontSize="14" Text="Choose a mod to edit its gametype entries." />
        <TextBlock Grid.Row="0" Grid.Column="2" Grid.ColumnSpan="2" Margin="0,15,15,10"
                   VerticalAlignment="Center" HorizontalAlignment="Left" Foreground="#808488"
                   FontSize="14" Text="{Binding ServerFolder, StringFormat={} {0}}" />

        <!-- #region ====================== Mod List Region ====================== -->

        <ListBox x:Name="ModsListBox" Grid.Row="1" Grid.Column="0" Padding="5" BorderBrush="Black"
                 Height="auto" Margin="5,0,0,0" Focusable="True"
                 ItemsSource="{Binding CurrentModList, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                 SelectionChanged="ModsListBox_SelectionChanged">
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <StackPanel>
                        <TextBlock Text="{Binding FileName}">
                            <TextBlock.Style>
                                <Style>
                                    <Style.Triggers>
                                        <DataTrigger Value="True" Binding="{Binding Path=IsSelected,
                                            RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem }}}">
                                            <Setter Property="TextBlock.FontWeight" Value="Bold"/>
                                        </DataTrigger>
                                        <DataTrigger Value="False" Binding="{Binding Path=IsSelected,
                                            RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem }}}">
                                            <Setter Property="TextBlock.FontWeight" Value="Regular"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                        <TextBox x:Name="ModLinkTextBox" Text="{Binding Link}" Width="300" Margin="2,0,0,0" TextWrapping="Wrap"
                                 Foreground="#A0A4A8" Background="Transparent" Tag="Paste link here...">
                            <TextBox.Style>
                                <Style>
                                    <Setter Property="TextBox.Background" Value="Transparent" />
                                    <Setter Property="TextBox.BorderBrush" Value="Transparent" />
                                    <Style.Triggers>
                                        <DataTrigger Value="True" Binding="{Binding Path=IsSelected,
                                            RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem }}}">
                                            <Setter Property="TextBlock.Visibility" Value="Visible"/>
                                        </DataTrigger>
                                        <DataTrigger Value="False" Binding="{Binding Path=IsSelected,
                                            RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem }}}">
                                            <Setter Property="TextBlock.Visibility" Value="Collapsed"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBox.Style>
                        </TextBox>
                    </StackPanel>
                </DataTemplate>
            </ListBox.ItemTemplate>
            
            <ListBox.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Remove" Click="ClickedRemoveMod"/>
                </ContextMenu>
            </ListBox.ContextMenu>
            
        </ListBox>

        <StackPanel Grid.Column="0" Grid.Row="2" VerticalAlignment="Center" Orientation="Horizontal" HorizontalAlignment="Stretch">

            <ComboBox x:Name="ModsCombobox" Width="250" Margin="5,0,3,0" Padding="10,4"
                      SelectionChanged="TypeComboBox_SelectionChanged"
                      VerticalAlignment="Stretch" HorizontalAlignment="Left" VerticalContentAlignment="Center"
                      ItemsSource="{Binding LocalModList, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                      IsEnabled="{Binding HasItems, RelativeSource={RelativeSource Self}, FallbackValue=False}"/>

            <Button x:Name="AddModButton" Content="Add" Click="ClickedAddMod"
                    Height="24" Padding="6,0" Margin="0,0,0,0"
                    VerticalAlignment="Top" HorizontalAlignment="Right" HorizontalContentAlignment="Center"
                    ToolTip="Add Mod" VerticalContentAlignment="Center">
                <Button.Style>
                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                        <Setter Property="Button.IsEnabled" Value="True"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=ModsCombobox, Path=SelectedIndex}" Value="-1">
                                <Setter Property="Button.IsEnabled" Value="False"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>

        </StackPanel>

        <StackPanel Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="3" Margin="10,4"
                    VerticalAlignment="Bottom" Orientation="Horizontal">
            <TextBlock x:Name="LinkPrefixTextBlock" Visibility="Collapsed"
                       FontSize="14" Text="{Binding ServerFolder, StringFormat={}{0} Link: }"
                       VerticalAlignment="Center" Foreground="#808488" />
            <TextBox Grid.ColumnSpan="3" x:Name="LinkTextBox" Visibility="Collapsed"
                     FontSize="14" Text="{Binding Link}"
                     VerticalAlignment="Center" Foreground="#808488" />
        </StackPanel>
        <!-- #endregion -->

        <!-- <GridSplitter Grid.Column="1" Width="0" HorizontalAlignment="Stretch" Background="Transparent" /> -->

        <!-- #region ====================== Gametype List Region ====================== -->

        <ListBox x:Name="TypesListBox" Grid.Row="1" Grid.Column="2" BorderBrush="Black" Padding="5"
                 Height="auto" Margin="4,0,0,0" Focusable="True"
                 SelectionChanged="TypesListBox_SelectionChanged">
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding TypeName}">
                            <TextBlock.Style>
                                <Style>
                                    <Style.Triggers>
                                        <DataTrigger Value="True" Binding="{Binding Path=IsSelected,
                                                RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem }}}">
                                            <Setter Property="TextBlock.FontWeight" Value="Bold"/>
                                        </DataTrigger>
                                        <DataTrigger Value="False" Binding="{Binding Path=IsSelected,
                                                RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem }}}">
                                            <Setter Property="TextBlock.FontWeight" Value="Regular"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </DataTemplate>
                </ListBox.ItemTemplate>
                <ListBox.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Remove" Click="ClickedRemoveGametype"/>
                    </ContextMenu>
                </ListBox.ContextMenu>
        </ListBox>

        <StackPanel Grid.Column="2" Grid.Row="2" VerticalAlignment="Center" Orientation="Horizontal" HorizontalAlignment="Stretch">

            <ComboBox x:Name="TypesCombobox" Width="200" Margin="31,0,3,0" Padding="10,4"
                      SelectionChanged="TypeComboBox_SelectionChanged"
                      VerticalAlignment="Stretch" HorizontalAlignment="Left" VerticalContentAlignment="Center"
                      ItemsSource="{Binding LocalGametypeList, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                      IsEnabled="{Binding HasItems, RelativeSource={RelativeSource Self}, FallbackValue=False}">
                <ComboBox.Style>
                    <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}">
                        <Setter Property="Visibility" Value="Visible"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=ModsListBox, Path=SelectedIndex}" Value="-1">
                                <Setter Property="Visibility" Value="Hidden"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ComboBox.Style>
            </ComboBox>

            <Button x:Name="AddTypeButton" Content="Add" Click="ClickedAddGametype"
                    Height="24" Padding="6,0" Margin="0,0,0,0"
                    VerticalAlignment="Top" HorizontalAlignment="Right" HorizontalContentAlignment="Center"
                    ToolTip="Add Gametype" VerticalContentAlignment="Center">
                <Button.Style>
                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                        <Setter Property="Button.IsEnabled" Value="True"/>
                        <Setter Property="Visibility" Value="Visible"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=TypesCombobox, Path=SelectedIndex}" Value="-1">
                                <Setter Property="Button.IsEnabled" Value="False"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=ModsListBox, Path=SelectedIndex}" Value="-1">
                                <Setter Property="Visibility" Value="Hidden"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>

        </StackPanel>

        <StackPanel Grid.Row="2" Grid.Column ="4" Margin="77,0,0,0"
                    VerticalAlignment="Bottom" Orientation="Horizontal">
            
            <Separator HorizontalContentAlignment="Stretch"/>
            
            <Button Content="Save Voting JSONs" Width="130" Margin="14,0" Padding="10,4"
                    VerticalAlignment="Bottom" HorizontalAlignment="Left" Click="SaveButtonClicked"/>
            
            <Button Content="Reload" Width="70" Margin="4,0" Padding="10,4" Click="ReloadAllClicked"
                    VerticalAlignment="Center" HorizontalAlignment="Right"/>
            
        </StackPanel>

        <!-- #endregion -->

        <!-- #region ====================== Gametype Properties Region ====================== -->

        <Border BorderBrush="Black" BorderThickness="1" Width="400" Grid.Column="3" Grid.Row="1" VerticalAlignment="Stretch"
                Background="#222222" HorizontalAlignment="Left" Padding="15,5,10,0" Margin="4,0,0,0">
            <ItemsControl>
                <Grid Name="TypeDataGrid" VerticalAlignment="Stretch">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="32" />
                        <RowDefinition Height="32" />
                        <RowDefinition Height="32" />
                        <RowDefinition Height="32" />
                        <RowDefinition Height="110" />
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="32" />
                    </Grid.RowDefinitions>

                    <StackPanel x:Name="TypeStack" Grid.Row="0" Margin="0" VerticalAlignment="Bottom" Orientation="Horizontal">
                        <TextBlock Width="150" Text="Gametype Name" Padding="0,5" TextAlignment="Left"/>
                        <TextBox x:Name="TypeNameTextBox" Text="{Binding TypeName}" Padding="1,0"
                                 FontWeight="Bold" Background="Transparent" BorderBrush="Transparent"
                                 ToolTip="This is the local folder name of this gametype. It is immutable from here."
                                 Width="215" Height="25" VerticalContentAlignment="Center" Focusable="False"/>
                    </StackPanel>

                    <StackPanel x:Name="TypeDisplayStack" Grid.Row="1" Margin="0" VerticalAlignment="Bottom" Orientation="Horizontal">
                        <TextBlock Width="150" Text="Display Name" Padding="0,5" TextAlignment="Left"/>
                        <TextBox x:Name="TypeDisplayNameTextBox" Text="{Binding TypeDisplayName}" Padding="1,0"
                                 ToolTip="Optional display name for this gametype when voting."
                                 Width="215" Height="25" VerticalContentAlignment="Center"/>
                    </StackPanel>

                    <StackPanel x:Name="ModDisplayStack" Grid.Row="2" Margin="0" VerticalAlignment="Bottom" Orientation="Horizontal">
                        <TextBlock Width="150" Text="Mod Display Name" Padding="0,5" TextAlignment="Left"/>
                        <TextBox x:Name="ModPackageDisplayNameTextBox" Text="{Binding ModPackage.DisplayName}" Padding="1,0"
                                 Width="215" Height="25" VerticalContentAlignment="Center"/>
                    </StackPanel>
                    
                    <StackPanel x:Name="DupeAmountStack" Grid.Row="3" Margin="0" VerticalAlignment="Bottom" Orientation="Horizontal">
                        <TextBlock Width="150" Text="Random Chance Multiplier" Padding="0,5" TextAlignment="Left"/>
                        <TextBox x:Name="DuplicateAmountTextBox" Text="" HorizontalContentAlignment="Center"
                                 Width="50" Height="25" VerticalContentAlignment="Center"/>
                        <Slider x:Name="DupeSlider" Maximum="15" Width="150" Margin="10,0,0,0" VerticalAlignment="Center"
                                TickPlacement="BottomRight" IsSnapToTickEnabled="True"
                                Value="{Binding RandomChance, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                ValueChanged="DupeSlider_ValueChanged"/>
                    </StackPanel>

                    <StackPanel x:Name="CommandStack" Grid.Row="4" Height="auto" Margin="0" VerticalAlignment="Top" Orientation="Horizontal">
                        <TextBlock Width="150" Text="Commands" Padding="0,16,0,0" TextAlignment="Left"/>
                        <ListBox x:Name="CommandListBox" Height="100" Width="215" Margin="0,10,0,0"
                                 ItemsSource="{Binding Commands, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                 SnapsToDevicePixels="True" ScrollViewer.VerticalScrollBarVisibility="Auto">
                            <ListBox.ItemContainerStyle>
                                <Style TargetType="ListBoxItem">
                                    <Setter Property="Focusable" Value="False" />
                                    <Setter Property="Padding" Value="0" />
                                </Style>
                            </ListBox.ItemContainerStyle>
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <CheckBox Content="{Binding Alias, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                              IsChecked="{Binding Enabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </StackPanel>
                    
                    <StackPanel x:Name="CharOverStack" Grid.Row="5" Margin="0,4,0,0" VerticalAlignment="Bottom" Orientation="Horizontal">
                        <TextBlock Width="150" Text="Character Overrides" Padding="0,5" TextAlignment="Left"/>
                        <ListBox x:Name="CharacterListBox" MinHeight="0" Width="215"
                                 ItemsSource="{Binding CharacterOverrides, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                 ScrollViewer.VerticalScrollBarVisibility="Auto" SnapsToDevicePixels="True">
                            <ListBox.ItemContainerStyle>
                                <Style TargetType="ListBoxItem">
                                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                    <Setter Property="Padding" Value="0" />
                                </Style>
                            </ListBox.ItemContainerStyle>
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>

                                        <TextBlock Grid.Column="0" Text="{Binding Team, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                 Padding="3,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                                        <TextBlock Grid.Column="1" Text=" =" FontSize="16" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                                        <TextBox Grid.Column="2" Text="{Binding CharacterSet, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                 VerticalContentAlignment="Center" HorizontalAlignment="Stretch" Tag="Character Set"
                                                 VerticalAlignment="Center"  HorizontalContentAlignment="Stretch"/>
                                        <TextBox Grid.Column="3" Text="{Binding Character, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                 VerticalContentAlignment="Center" HorizontalAlignment="Stretch" Tag="Character"
                                                 VerticalAlignment="Center"  HorizontalContentAlignment="Stretch"/>
                                    </Grid>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                            <ListBox.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Header="Add" Click="ClickedAddCharOverride"/>
                                    <MenuItem Header="Remove" Click="ClickedRemoveCharOverride"/>
                                </ContextMenu>
                            </ListBox.ContextMenu>
                        </ListBox>
                    </StackPanel>
                    
                    <StackPanel x:Name="SpecificMapStack" Grid.Row="6" Margin="0" VerticalAlignment="Bottom" Orientation="Horizontal">
                        <TextBlock Width="150" Text="Specific Maps" Padding="0,10" TextAlignment="Left"/>
                        <ListBox x:Name="MapsListBox" MinHeight="130" Margin="0,5,0,0" VerticalAlignment="Stretch" Width="215"
                                 ItemsSource="{Binding SpecificMaps, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                 ScrollViewer.VerticalScrollBarVisibility="Auto" SnapsToDevicePixels="True">
                            <ListBox.ItemContainerStyle>
                                <Style TargetType="ListBoxItem">
                                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                    <Setter Property="Padding" Value="0"/>
                                </Style>
                            </ListBox.ItemContainerStyle>
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <Grid Background="Transparent">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>

                                        <TextBox Grid.Column="0" Text="{Binding DisplayName,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                 VerticalContentAlignment="Center" HorizontalContentAlignment="Stretch" Tag="Display Name"/>
                                        <TextBlock Grid.Column="1" Text="|" Foreground="#606060" FontSize="14" VerticalAlignment="Center" HorizontalAlignment="Right"/>
                                        <TextBox Grid.Column="2" Text="{Binding MapFileName,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                 VerticalContentAlignment="Center" HorizontalAlignment="Right" MinWidth="22" Tag="File Name "/>
                                    </Grid>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                            <ListBox.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Header="Copy Map To All Gametypes" Click="ClickedCopyMapToAllGametypes"/>
                                    <MenuItem Header="Copy Map List To All Gametypes" Click="ClickedCopyMapListToAllGametypes"/>
                                    <MenuItem Header="Remove Map" Click="ClickedRemoveMap"/>
                                </ContextMenu>
                            </ListBox.ContextMenu>
                        </ListBox>
                    </StackPanel>

                    <StackPanel x:Name="AddMapStack" Grid.Row="7" Margin="0"
                                VerticalAlignment="Bottom" HorizontalAlignment="Right" Orientation="Horizontal">
                        <ComboBox x:Name="MapsComboBox" Grid.Column="2" Grid.Row="2" Margin="0" Width="187"
                                  VerticalAlignment="Stretch" HorizontalAlignment="Stretch" VerticalContentAlignment="Center"/>
                        <Button x:Name="AddMapVarButton" Grid.Column="2" Grid.Row="2" Click="ClickedAddMap" Height="auto"
                                VerticalAlignment="Stretch" HorizontalAlignment="Right" Width="28" Margin="0,0,8,0"
                                Content="+" ToolTip="Click to add the selected map." FontSize="18" VerticalContentAlignment="Center"/>
                    </StackPanel>
                    
                </Grid>
            </ItemsControl>

        </Border>
        <!-- #endregion -->
        
    </Grid>
</UserControl>
