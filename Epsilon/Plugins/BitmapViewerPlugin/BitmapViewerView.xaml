<UserControl x:Class="BitmapViewerPlugin.BitmapViewerView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:BitmapViewerPlugin"
             mc:Ignorable="d"
             d:DesignHeight="450"
             d:DesignWidth="800">
    <UserControl.Resources>
        <Style x:Key="ComponentToggleButtonStyle"
               BasedOn="{StaticResource {x:Type ToggleButton}}"
               TargetType="{x:Type ToggleButton}">
            <Setter Property="FontSize"
                    Value="16" />
            <Setter Property="Padding"
                    Value="4,0" />
            <Setter Property="VerticalAlignment"
                    Value="Center" />
            <Style.Triggers>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Foreground" Value="{DynamicResource Foreground}"/>
                    <Setter Property="Background" Value="{DynamicResource Inset}"/>
                    <Setter Property="BorderBrush" Value="{DynamicResource Accent}"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="False">
                    <!--<Setter Property="Foreground" Value="#C0C0C0"/>-->
                    <Setter Property="Background" Value="Transparent"/>
                    <!--<Setter Property="BorderBrush" Value="Transparent"/>-->
                </Trigger>
            </Style.Triggers>
        </Style>
        <DrawingBrush x:Key="Checkers" TileMode="Tile" Viewport="0,0,20,20" ViewportUnits="Absolute">
            <DrawingBrush.Drawing>
                <GeometryDrawing Geometry="M0,0 H1 V1 H2 V2 H1 V1 H0Z" Brush="#20000000"/>
            </DrawingBrush.Drawing>
        </DrawingBrush>
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <Border Background="#252526" Grid.Row="1" MouseMove="Image_MouseMove">
            <Grid>
                <TextBlock Text="{Binding ErrorMessage}" Margin="4" FontSize="14" TextWrapping="Wrap">
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
                            <Setter Property="FrameworkElement.Visibility" Value="Collapsed" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding LoadingState}" Value="Failed">
                                    <Setter Property="FrameworkElement.Visibility" Value="Visible" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>

                <Border BorderThickness="1" BorderBrush="Black">
                    <local:ZoomBorder x:Name="ZoomControl" ClipToBounds="True" Background="{StaticResource Checkers}">
                        <Image ClipToBounds="True" x:Name="_image" Source="{Binding DisplayBitmap}"
                            RenderOptions.BitmapScalingMode="NearestNeighbor" ></Image>
                        <local:ZoomBorder.Style>
                            <Style>
                                <Setter Property="FrameworkElement.Visibility" Value="Hidden" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding LoadingState}" Value="Success">
                                        <DataTrigger.Setters>
                                            <Setter Property="FrameworkElement.Visibility" Value="Visible" />
                                        </DataTrigger.Setters>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </local:ZoomBorder.Style>
                    </local:ZoomBorder>
                </Border>
                
                <ProgressBar IsIndeterminate="True" VerticalAlignment="Top">
                    <ProgressBar.Style>
                        <Style TargetType="{x:Type ProgressBar}" BasedOn="{StaticResource {x:Type ProgressBar}}">
                            <Setter Property="FrameworkElement.Visibility" Value="Collapsed" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding LoadingState}" Value="Loading">
                                    <Setter Property="FrameworkElement.Visibility" Value="Visible" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ProgressBar.Style>
                </ProgressBar>
            </Grid>
        </Border>

        <Border DockPanel.Dock="Top"
                Grid.Row="0">
            <Grid Margin="4,6">
                <StackPanel Orientation="Horizontal"
                            VerticalAlignment="Center">
                    <ComboBox ItemsSource="{Binding Bitmaps, Mode=OneWay}"
                              SelectedIndex="{Binding BitmapIndex, Mode=TwoWay}"
                              VerticalAlignment="Center"
                              Width="100"
                              Margin="2,0"
                              IsEnabled="{Binding IsLoaded}">
                    </ComboBox>
                    <ComboBox ItemsSource="{Binding Layers, Mode=OneWay}"
                              SelectedIndex="{Binding LayerIndex, Mode=TwoWay}"
                              VerticalAlignment="Center"
                              Width="100"
                              Margin="2,0"
                              IsEnabled="{Binding IsLoaded}">
                    </ComboBox>
                    <ComboBox ItemsSource="{Binding MipLevels, Mode=OneWay}"
                              SelectedIndex="{Binding MipLevel, Mode=TwoWay}"
                              VerticalAlignment="Center"
                              Width="100"
                              Margin="2,0"
                              IsEnabled="{Binding IsLoaded}">
                    </ComboBox>
                </StackPanel>

                <StackPanel Orientation="Horizontal"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Center"
                            Margin="4,0">
                    <ToggleButton x:Name="_toggleR"
                                  Content="R"
                                  IsChecked="{Binding ChannelR}"
                                  Style="{StaticResource ComponentToggleButtonStyle}" />
                    <ToggleButton x:Name="_toggleG"
                                  Content="G"
                                  IsChecked="{Binding ChannelG}"
                                  Style="{StaticResource ComponentToggleButtonStyle}" />
                    <ToggleButton x:Name="_toggleB"
                                  Content="B"
                                  IsChecked="{Binding ChannelB}"
                                  Style="{StaticResource ComponentToggleButtonStyle}" />
                    <ToggleButton x:Name="_toggleA"
                                  Content="A"
                                  IsChecked="{Binding ChannelA}"
                                  Style="{StaticResource ComponentToggleButtonStyle}" />
                </StackPanel>

            </Grid>
        </Border>
        <StatusBar Grid.Row="2"
                   Background="#252526"
                   Foreground="{DynamicResource Foreground}"
                   BorderBrush="#2d2d30"
                   BorderThickness="0,1,0,0"
                   Padding="4,2">
            <StatusBar.ItemsPanel>
                <ItemsPanelTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="150" />
                            <ColumnDefinition Width="150" />
                            <ColumnDefinition Width="90" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="150" />
                        </Grid.ColumnDefinitions>
                    </Grid>
                </ItemsPanelTemplate>
            </StatusBar.ItemsPanel>
            <StatusBarItem Grid.Column="0">
                <DockPanel>
                    <TextBlock Foreground="DarkGray" Text="Format"/>
                    <TextBlock Padding="5,0" Text="{Binding Format, Mode=OneWay}"/>
                </DockPanel>
            </StatusBarItem>
            <StatusBarItem  Grid.Column="1">
                <DockPanel>
                    <TextBlock Foreground="DarkGray" Text="Mipsize"/>
                    <TextBlock Padding="5,0" Text="{Binding Dimensions, Mode=OneWay}"/>
                </DockPanel>
            </StatusBarItem>
            <StatusBarItem Grid.Column="2">
                <TextBlock x:Name="_cursorPos" />
            </StatusBarItem>
            <StatusBarItem Grid.Column="3">
                <TextBlock x:Name="_color" />
            </StatusBarItem>
            <StatusBarItem Grid.Column="4" HorizontalAlignment="Right">
                <DockPanel HorizontalAlignment="Right">
                    <TextBlock
                        HorizontalAlignment="Left"
                        TextAlignment="Left"
                        Foreground="DarkGray"
                        Text="Resource Size"/>
                    <TextBlock
                        HorizontalAlignment="Right"
                        TextAlignment="Right"
                        Padding="5,0,0,0"
                        Width="auto"
                        Text="{Binding ResourceSize, Mode=OneWay}"/>
                </DockPanel>
            </StatusBarItem>
        </StatusBar>
    </Grid>
</UserControl>
